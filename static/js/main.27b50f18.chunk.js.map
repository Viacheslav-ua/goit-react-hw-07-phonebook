{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Modal/Modal.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","App.module.css","components/Modal/Modal.tsx","redux/phoneBookApi.ts","components/ContactForm/ContactForm.tsx","components/Filter/Filter.tsx","hooks/use-debounce.ts","components/ContactList/ContactList.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["module","exports","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","className","S","backdrop","onClick","currentTarget","target","content","phoneBookApi","createApi","reducerPath","tagTypes","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getContacts","query","filterStr","providesTags","result","map","type","id","addContacts","mutation","body","url","method","invalidatesTags","deleteContacts","useGetContactsQuery","useAddContactsMutation","useDeleteContactsMutation","ContactForm","useState","name","setName","nameSearch","setNameSearch","number","setNumber","showModal","setShowModal","data","addContact","length","addItem","reset","toggleModal","handleAddInput","i","RegExp","test","value","a","phone","unwrap","state","Alert","severity","AlertTitle","contactsForm","onSubmit","preventDefault","elements","TextField","label","variant","onChange","title","required","Button","btn","Filter","applyFilter","filterValue","setFilterValue","debouncedFilter","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","input","ContactList","filter","setFilter","isLoading","deleteContact","onDeleteContact","xWord","list","row","text","App","container","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","devTools","process","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.27b50f18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"ContactList_row__25WMk\",\"text\":\"ContactList_text__3rhwb\",\"btn\":\"ContactList_btn__2vF9B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1ckKI\",\"content\":\"Modal_content__3218z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsForm\":\"ContactForm_contactsForm__1Nfah\",\"input\":\"ContactForm_input__1ypI5\",\"caption\":\"ContactForm_caption__2YSdj\",\"btn\":\"ContactForm_btn__1sfrz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caption\":\"Filter_caption__mFShp\",\"input\":\"Filter_input__36ZmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__YEoLw\",\"title\":\"App_title__mPC2u\"};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nimport S from \"./Modal.module.css\";\r\n\r\nconst modalRoot: any = document.querySelector(\"#modal-root\");\r\ninterface PropsType {\r\n  onClose: any;\r\n  children: React.ReactChild | React.ReactNode;\r\n}\r\nconst Modal: React.FC<PropsType> = ({ onClose, children }) => {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  const handleKeyDown = (e: KeyboardEvent) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = (e: React.MouseEvent) => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={S.backdrop} onClick={handleBackdropClick}>\r\n      <div className={S.content}>{children}</div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n};\r\nexport default Modal;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const phoneBookApi = createApi({\r\n  reducerPath: \"phoneBookApi\",\r\n  tagTypes: [\"Contacts\"],\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://618ed24b50e24d0017ce147f.mockapi.io/\",\r\n  }),\r\n  endpoints: (builder) => ({\r\n    getContacts: builder.query({\r\n      query: (filterStr) => `contacts?sortBy=name&name=${filterStr}`,\r\n      providesTags: (result) =>\r\n        result\r\n          ? [\r\n              ...result.map(({ id }: any) => ({\r\n                type: \"Contacts\" as const,\r\n                id,\r\n              })),\r\n              { type: \"Contacts\", id: \"LIST\" },\r\n            ]\r\n          : [{ type: \"Contacts\", id: \"LIST\" }],\r\n    }),\r\n    addContacts: builder.mutation({\r\n      query: (body) => ({\r\n        url: \"contacts\",\r\n        method: \"POST\",\r\n        body,\r\n      }),\r\n      invalidatesTags: [{ type: \"Contacts\", id: \"LIST\" }],\r\n    }),\r\n    deleteContacts: builder.mutation({\r\n      query: (id) => ({\r\n        url: `contacts/${id}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [{ type: \"Contacts\", id: \"LIST\" }],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetContactsQuery,\r\n  useAddContactsMutation,\r\n  useDeleteContactsMutation,\r\n} = phoneBookApi;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"../Modal\";\r\nimport {\r\n  useAddContactsMutation,\r\n  useGetContactsQuery,\r\n} from \"../../redux/phoneBookApi\";\r\nimport S from \"./ContactForm.module.css\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\n\r\nconst ContactForm: React.FC = () => {\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [nameSearch, setNameSearch] = useState<string>();\r\n  const [number, setNumber] = useState<string>(\"\");\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n\r\n  const { data = [] } = useGetContactsQuery(nameSearch);\r\n  const [addContact] = useAddContactsMutation();\r\n\r\n  useEffect(() => {\r\n    if (name !== \"\") {\r\n      if (data.length === 0) {\r\n        addItem();\r\n        reset();\r\n      } else {\r\n        toggleModal();\r\n      }\r\n    }\r\n  }, [data]);\r\n\r\n  const handleAddInput =\r\n    (i: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const b = new RegExp(i);\r\n      if (b.test(e.currentTarget.value)) {\r\n        if (e.currentTarget.name === \"name\") setName(e.currentTarget.value);\r\n        if (e.currentTarget.name === \"number\") setNumber(e.currentTarget.value);\r\n      }\r\n    };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement | any>) => {\r\n    e.preventDefault();\r\n    setNameSearch(e.currentTarget.elements.name.value);\r\n  };\r\n\r\n  const addItem = async () => {\r\n    await addContact({ name: name, phone: number }).unwrap();\r\n    return;\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const toggleModal = (): void => {\r\n    setShowModal((state) => !state);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showModal && (\r\n        <Modal onClose={toggleModal}>\r\n          <Alert severity=\"warning\" onClose={toggleModal}>\r\n            <AlertTitle>Warning</AlertTitle>\r\n            {nameSearch} is already in contacts\r\n          </Alert>\r\n        </Modal>\r\n      )}\r\n      <form className={S.contactsForm} onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Name\"\r\n          variant=\"standard\"\r\n          id=\"component-simple\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleAddInput(\"^$|^[$a-zA-Zа-яА-Я -']*$\")}\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"Phone number\"\r\n          variant=\"standard\"\r\n          id=\"component-simple\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleAddInput(\"^$|^\\\\+|^\\\\d[\\\\d\\\\s-.]*$\")}\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n\r\n        <Button type=\"submit\" className={S.btn} variant=\"contained\">\r\n          Add contact\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport useDebounce from \"../../hooks/use-debounce\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport S from \"./Filter.module.css\";\r\n\r\nconst Filter: React.FC<any> = ({ applyFilter }) => {\r\n  const [filterValue, setFilterValue] = useState(\"\");\r\n  const debouncedFilter = useDebounce(filterValue, 500);\r\n\r\n  useEffect(() => {\r\n    applyFilter(debouncedFilter);\r\n  }, [debouncedFilter]);\r\n\r\n  const handleChangeFilter = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFilterValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TextField\r\n        label=\"Find contacts by name\"\r\n        variant=\"standard\"\r\n        id=\"component-simple\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        className={S.input}\r\n        value={filterValue}\r\n        onChange={handleChangeFilter}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Filter;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useDebounce(value: string, delay: number) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value]);\r\n\r\n  return debouncedValue;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport {\r\n  useGetContactsQuery,\r\n  useDeleteContactsMutation,\r\n} from \"../../redux/phoneBookApi\";\r\nimport S from \"./ContactList.module.css\";\r\ntype listType = {\r\n  id: string;\r\n  name: string;\r\n  phone: string;\r\n};\r\n\r\nconst ContactList: React.FC = () => {\r\n  const [filter, setFilter] = useState(\"\");\r\n  const { data = [], isLoading } = useGetContactsQuery(filter);\r\n  const [deleteContact] = useDeleteContactsMutation();\r\n\r\n  const onDeleteContact = async (id: string | number) => {\r\n    await deleteContact(id).unwrap();\r\n  };\r\n\r\n  function applyFilter(xWord: string) {\r\n    setFilter(xWord);\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <h1>LOADING...</h1>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2 className={S.title}>Contacts</h2>\r\n      <Filter applyFilter={applyFilter} />\r\n      <ul className={S.list}>\r\n        {data.map(({ id, name, phone }: listType) => (\r\n          <li key={id} className={S.row}>\r\n            <p className={S.text}>\r\n              {name}: {phone}\r\n            </p>\r\n            <button className={S.btn} onClick={() => onDeleteContact(id)}>\r\n              Удалить\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport S from \"./App.module.css\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className={S.container}>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { phoneBookApi } from \"./phoneBookApi\"\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    [phoneBookApi.reducerPath]: phoneBookApi.reducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(phoneBookApi.middleware),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default { store };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store.store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}