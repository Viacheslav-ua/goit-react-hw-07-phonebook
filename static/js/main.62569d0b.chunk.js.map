{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Modal/Modal.module.css","components/ContactForm/ContactForm.module.css","App.module.css","components/Filter/Filter.module.css","components/Modal/Modal.tsx","redux/phoneBookApi.ts","components/ContactForm/ContactForm.tsx","components/ContactList/ContactList.tsx","components/Filter/Filter.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["module","exports","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","className","S","backdrop","onClick","currentTarget","target","content","phoneBookApi","createApi","reducerPath","tagTypes","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getContacts","query","providesTags","result","map","type","id","addContacts","mutation","body","url","method","invalidatesTags","deleteContacts","useGetContactsQuery","useAddContactsMutation","useDeleteContactsMutation","ContactForm","useState","name","setName","number","setNumber","showModal","setShowModal","addContact","handleAddInput","isError","i","RegExp","test","value","handleSubmit","a","preventDefault","phone","unwrap","reset","toggleModal","state","Alert","severity","AlertTitle","contactsForm","onSubmit","TextField","label","variant","onChange","title","required","Button","btn","ContactList","data","isLoading","deleteContact","onDeleteContact","list","row","text","Filter","filterValue","setFilterValue","input","App","container","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","devTools","process","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.62569d0b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"ContactList_row__2SpKF\",\"text\":\"ContactList_text__2dM24\",\"btn\":\"ContactList_btn__1Xk4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3FAPo\",\"content\":\"Modal_content__1VIbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsForm\":\"ContactForm_contactsForm__1GPkI\",\"input\":\"ContactForm_input__gm87B\",\"caption\":\"ContactForm_caption__3a2ub\",\"btn\":\"ContactForm_btn__2Bpnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"title\":\"App_title__-GfWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"caption\":\"Filter_caption__2iNPg\",\"input\":\"Filter_input__2DoVp\"};","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport S from \"./Modal.module.css\";\n\nconst modalRoot: any = document.querySelector(\"#modal-root\");\ninterface PropsType {\n  onClose: any;\n  children: React.ReactChild | React.ReactNode;\n}\nconst Modal: React.FC<PropsType> = ({ onClose, children }) => {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n\n  const handleKeyDown = (e: KeyboardEvent) => {\n    if (e.code === \"Escape\") {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = (e: React.MouseEvent) => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={S.backdrop} onClick={handleBackdropClick}>\n      <div className={S.content}>{children}</div>\n    </div>,\n    modalRoot\n  );\n};\nexport default Modal;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const phoneBookApi = createApi({\n  reducerPath: 'phoneBookApi',\n  tagTypes: ['Contacts'],\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://618ed24b50e24d0017ce147f.mockapi.io/' }),\n  endpoints: (builder) => ({\n    getContacts: builder.query({\n      query: () => 'contacts',\n      providesTags: (result) =>\n        result\n          ? [\n              ...result.map(({ id }: any) => ({ type: 'Contacts' as const, id })),\n              { type: 'Contacts', id: 'LIST' },\n            ]\n          : [{ type: 'Contacts', id: 'LIST' }],\n    }),\n    addContacts: builder.mutation({\n      query: body => ({\n        url: 'contacts',\n        method: 'POST',\n        body,\n      }),\n      invalidatesTags: [{type: 'Contacts', id: 'LIST'}]\n    }),\n    deleteContacts: builder.mutation({\n      query: id => ({\n        url: `contacts/${id}`,\n        method: 'DELETE'\n      }),\n      invalidatesTags: [{type: 'Contacts', id: 'LIST'}]\n    })\n  }),\n})\n\nexport const {useGetContactsQuery, useAddContactsMutation, useDeleteContactsMutation} = phoneBookApi","import React, { useState } from \"react\";\nimport Modal from \"../Modal\";\nimport { useAddContactsMutation } from \"../../redux/phoneBookApi\"\nimport S from \"./ContactForm.module.css\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Alert from \"@mui/material/Alert\";\nimport AlertTitle from \"@mui/material/AlertTitle\";\n\n\ninterface PropsType {\n  \n  contacts: any;\n}\n\n// type contactsType = {\n//   name: string;\n//   phone: string;\n// };\n\nconst ContactForm: React.FC = () => {\n  const [name, setName] = useState<string>(\"\");\n  const [number, setNumber] = useState<string>(\"\");\n  const [showModal, setShowModal] = useState<boolean>(false);\n\n  const [addContact, {isError}] = useAddContactsMutation();\n\n  const handleAddInput =\n    (i: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\n      const b = new RegExp(i);\n      if (b.test(e.currentTarget.value)) {\n        if (e.currentTarget.name === \"name\") setName(e.currentTarget.value);\n        if (e.currentTarget.name === \"number\") setNumber(e.currentTarget.value);\n      }\n    };\n\n  const handleSubmit = async(e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    await addContact({ name: name, phone: number }).unwrap();\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const toggleModal = (): void => {\n    setShowModal((state) => !state);\n  };\n\n  return (\n    <>\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <Alert severity=\"warning\" onClose={toggleModal}>\n            <AlertTitle>Warning</AlertTitle>\n            {name} is already in contacts\n          </Alert>\n        </Modal>\n      )}\n      <form className={S.contactsForm} onSubmit={handleSubmit}>\n        <TextField\n          label=\"Name\"\n          variant=\"standard\"\n          id=\"component-simple\"\n          name=\"name\"\n          value={name}\n          onChange={handleAddInput(\"^$|^[$a-zA-Zа-яА-Я -']*$\")}\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <TextField\n          label=\"Phone number\"\n          variant=\"standard\"\n          id=\"component-simple\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleAddInput(\"^$|^\\\\+|^\\\\d[\\\\d\\\\s-.]*$\")}\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n\n        <Button type=\"submit\" className={S.btn} variant=\"contained\">\n          Add contact\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default ContactForm;","import React from \"react\";\nimport { useGetContactsQuery, useDeleteContactsMutation } from \"../../redux/phoneBookApi\"\nimport S from \"./ContactList.module.css\";\ntype listType = {\n  id: string;\n  name: string;\n  phone: string;\n};\n\n// interface PropsType {\n//   contacts: listType[];\n//   onDeleteContact: string;\n// }\n\nconst ContactList: React.FC = () => {\n\n  const { data = [], isLoading } = useGetContactsQuery('');\n  const [deleteContact] = useDeleteContactsMutation();\n\n  const onDeleteContact = async(id: string | number) => {\n    await deleteContact(id).unwrap();\n  }\n\n  if (isLoading) {\n    return <h1>LOADING...</h1>\n  }\n\n  return (\n    <ul className={S.list}>\n      {data.map(\n        ({ id, name, phone }: listType) =>\n        \n        (<li key={id} className={S.row}>\n          <p className={S.text}>\n            {name}: {phone}\n          </p>\n          <button className={S.btn} onClick={() => onDeleteContact(id)}>\n            Удалить\n          </button>\n        </li>\n        )\n      )}\n    </ul>\n  );\n};\n\nexport default ContactList;","import React from \"react\";\nimport { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport S from \"./Filter.module.css\";\n\nconst Filter: React.FC = () => {\nconst [filterValue, setFilterValue] = useState('');\n\nconst handleChangeFilter = (e: React.ChangeEvent<HTMLInputElement>) => {\n  setFilterValue(e.target.value);\n}\n\n  return (\n    <div>\n      <TextField\n        label=\"Find contacts by name\"\n        variant=\"standard\"\n        id=\"component-simple\"\n        type=\"text\"\n        name=\"filter\"\n        className={S.input}\n        value={filterValue}\n        onChange={handleChangeFilter}\n      />\n    </div>\n  );\n};\nexport default Filter;\n","import React from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport S from \"./App.module.css\";\n\n\nconst App: React.FC = () => {\n  return (\n    <div className={S.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2 className={S.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { phoneBookApi } from \"./phoneBookApi\"\n\n\nconst store = configureStore({\n  reducer: {\n    [phoneBookApi.reducerPath]: phoneBookApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(phoneBookApi.middleware),\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default { store };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store.store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}